[package]
name = "sample"
version = "0.1.0"
edition = "2018"


#cargo new --lib --name html ./crates/html
[workspace]
members = ["./crates/nx_html","./crates/nx_mem"]
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# wasmtime = "32.0.0"
# wit-bindgen = "0.41.0"
# wasm-bindgen = { version = "0.2.99" }
# reqwest = {version ="0.12.15",  features = ["blocking"] }
# flume = "0.11"
# tokio = { version = "1.44.2", default-features = false, features = ["rt", "macros"] }
# burn = {version = "0.16.0",default-features = false, features = ["ndarray","autodiff"] }
# burn-vision = {version = "0.17.0",default-features = false, features =[] }
# async-channel = "2.3"
rand = "0.9.1"
getrandom = "0.3.2"
dom_query = "0.18.0"
# ureq = "3.0.11"
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
# once_cell = "1.19"  # or latest stable
log = "0.4.6"
nx_mem = {path = "./crates/nx_mem"}
nx_html = {path = "./crates/nx_html"}
serde = {version = "1.0.219", features = ["derive"]}
serde_json = "1.0.140"

# alloc_cat = "1.0.0"

# [patch.crates-io]
# async-channel = "2.3.1" 

# [lib]
# crate-type = ['cdylib']
# name = "my_rust_function"
# path = "src/lib/lib.rs"


# [[bin]]
# name = "wasi-test"
# path = "src/bin/main.rs"

[[bin]]
name = "html-test"
path = "src/bin/html-test.rs"


# https://stackoverflow.com/questions/49077147/how-can-i-force-build-rs-to-run-again-without-cleaning-my-whole-project
# [[bin]]
# name = "force-build"
# path = "build.rs"
# required-features = ["build_deps"]


# [features]
# build_deps = ["cc"]


[profile.release]
opt-level = "z"
lto = true
# codegen-units = 1
[build-dependencies]
cc = "1.0"
[package.metadata.wasm]
initial-memory = 20972152  # in bytes or pages (depends on tool)
# [package.metadata.component]
# target = { path = "wit/host.wit" }
# [target.wasm32-wasip1-threads]
# rustflags = [
#   "-C", "target-feature=+atomics,+bulk-memory,+mutable-globals",
# ]

# [target.wasm32-wasip1-threads]
# runner = "wasmtime run --wasm-features=threads --wasi-modules=experimental-wasi-threads"
# rustflags = [
#   "-C", "target-feature=+atomics,+bulk-memory,+mutable-globals",
# ]

# [target.'cfg(target_arch = "wasm32")']
# runner = "wasmtime run --wasm-features threads"
# [features]
# default = []
# atomics = ["wasm-bindgen/atomics"]
# bulk-memory = ["wasm-bindgen/bulk-memory"]
# threads = ["wasm-bindgen/threads"]